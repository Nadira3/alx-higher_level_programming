>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
 ...
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, "str")
Traceback (most recent call last):
 ...
TypeError: div must be a number
>>> matrix= [[1, 2, 3], (4, 5, 6)]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix)
Traceback (most recent call last):
 ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix = [[1, 2, 3.4], (4, 5, 6)]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3.4], (4.5, 5, 6)]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3.4], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.7], [2.0, 2.5, 3.0]]
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.36], [1.6, 2.0, 2.4]]
>>> matrix_divided(matrix, -3)
[[-0.33, -0.67, -1.13], [-1.33, -1.67, -2.0]]
>>> matrix = [[1, 2, 3.4], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
 ...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, float("inf")], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, inf], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, float("inf"))
[[0.0, 0.0, nan], [0.0, 0.0, 0.0]]
